apply plugin: 'jacoco'

jacoco {
    toolVersion = "0.7.5.201505241946"
}

task testDebugUnitTestCoverage (type:JacocoReport, dependsOn: "testDebugUnitTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports on the DEBUG build."

    classDirectories = fileTree(
            dir: "${project.buildDir}/intermediates/classes/debug",
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/*$ViewBinder*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    def coverageSourceDirs = ["src/main/java"]
    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files("${project.buildDir}/jacoco/testDebugUnitTest.exec")

    reports {
        xml.enabled = true
        html.enabled = true
    }
}

dependencies {
   testCompile 'junit:junit:4.12'
   testCompile 'org.mockito:mockito-core:1.10.19'
   testCompile 'org.hamcrest:hamcrest-library:1.1'
   testCompile 'org.powermock:powermock-api-mockito:1.6.2'
   testCompile 'org.powermock:powermock-module-junit4:1.6.2'
   testCompile 'com.openpojo:openpojo:0.8.0'
   testCompile 'asm:asm:3.3.1'
}

android { buildTypes { debug {
  testCoverageEnabled = true
}}}
